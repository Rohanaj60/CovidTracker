{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Web Development\\\\CovidTracker\\\\src\\\\MyComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyComponent() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://corona.askbhunte.com/api/v1/data/world\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\"country         totalCases      newCases        totalDeaths         newDeaths           activeCases     totalRecovered\", /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [items[100].totalCases, \" \", items[100].newCases, \" \", items[100].totalDeaths, \" \", items[100].newDeaths, \" \", items[100].activeCases, \" \", items[100].totalRecovered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(MyComponent, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = MyComponent;\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["D:/Development/Web Development/CovidTracker/src/MyComponent.js"],"names":["React","useEffect","useState","MyComponent","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","totalCases","newCases","totalDeaths","newDeaths","activeCases","totalRecovered"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAIA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAHmB,CAKnB;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBAEE;AAAA,wJAEF;AAAA,mBAEOE,KAAK,CAAC,GAAD,CAAL,CAAWQ,UAFlB,OAE+BR,KAAK,CAAC,GAAD,CAAL,CAAWS,QAF1C,OAEqDT,KAAK,CAAC,GAAD,CAAL,CAAWU,WAFhE,OAE8EV,KAAK,CAAC,GAAD,CAAL,CAAWW,SAFzF,OAEqGX,KAAK,CAAC,GAAD,CAAL,CAAWY,WAFhH,OAE8HZ,KAAK,CAAC,GAAD,CAAL,CAAWa,cAFzI;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAWD;AACF;;GA3CMlB,W;;KAAAA,W;AA4CP,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nfunction MyComponent() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n  \r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n      fetch(\"https://corona.askbhunte.com/api/v1/data/world\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setItems(result);\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n    }, [])\r\n  \r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n          \r\n        <ul>\r\n              country         totalCases      newCases        totalDeaths         newDeaths           activeCases     totalRecovered\r\n      <li>\r\n              \r\n            {items[100].totalCases} {items[100].newCases} {items[100].totalDeaths} {items[100].newDeaths} {items[100].activeCases} {items[100].totalRecovered}\r\n\r\n      </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n  export default MyComponent;"]},"metadata":{},"sourceType":"module"}