{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Web Development\\\\CovidTracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://data.askbhunte.com/api/v1/world\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tophead\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Live Covid Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: items[2].lCases\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \" 0000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Recovered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \" 0000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Death\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \" 0000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Last Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \" 0000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(App, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Development/Web Development/CovidTracker/src/App.js"],"names":["React","useEffect","useState","App","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","lCases"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC,CAHW,CAKX;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,yCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBAED;AAAA,8BAEA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFA,eAMD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAGA;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,kCAEJ;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACA;AAAA,wBACCE,KAAK,CAAC,CAAD,CAAL,CAASQ;AADV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFI,eAOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPI;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAaJ;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,kCAEA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbI,eAsBJ;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,kCAEA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBI,eA+BJ;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,kCAEA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BI;AAAA;AAAA;AAAA;AAAA;AAAA,cANC;AAAA,oBAFC;AAwDD;AACF;;GAxFMb,G;;KAAAA,G;AAyFP,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\n\nfunction App() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n  \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"https://data.askbhunte.com/api/v1/world\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setItems(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n          \n     <>\n     \n     <div className=\"tophead\">\n      <h1>Live Covid Tracker</h1>\n\n      </div>\n    <div className=\"container\">\n     \n \n    <div className = \"cardbox\">\n\n<div className=\"heading\">\n<h3>\n{items[2].lCases}\n  </h3>\n</div>\n<h5> 0000000</h5>\n</div>\n\n<div className = \"cardbox\">\n\n<div className=\"heading\">\n<h3>\n  Total Recovered\n  </h3>\n</div>\n<h5> 0000000</h5>\n</div>\n<div className = \"cardbox\">\n\n<div className=\"heading\">\n<h3>\n  Total Death\n  </h3>\n</div>\n<h5> 0000000</h5>\n</div>\n<div className = \"cardbox\">\n\n<div className=\"heading\">\n<h3>\n  Last Updated\n  </h3>\n</div>\n<h5> 0000000</h5>\n</div>\n\n\n\n\n\n    </div>\n     </>\n      );\n    }\n  }\n  export default App;"]},"metadata":{},"sourceType":"module"}